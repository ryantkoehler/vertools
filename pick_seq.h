/*
* pick_seq.h
*
* Copyright 2019 Ryan Koehler, VerdAscend Sciences, ryan@verdascend.com
*
* The programs and source code of the vertools collection are free software.
* They are distributed in the hope that they will be useful,
* WITHOUT ANY WARRANTY OF FITNESS FOR ANY PARTICULAR PURPOSE.  
* 
* Permission is granted for research, educational, and possibly commercial use 
*   and modification as long as 1) Code and any derived works are not 
*   redistributed for any fee, and 2) Proper credit is given to the authors. 
*   If you wish to include this software in a product, or use it commercially,
*   please contact the authors.
*
* See https://www.verdascend.com/ for more
*
*/


#define VERSION_S "Pick_Seq Version 0.85"


/***
*   Data structure for pair-wise comparision parameters
*/
#define PP_IND_NUM      16

#define PICKSEQ_ID      5111
typedef struct PICKSEQ 
{
    int ID;
    char seqname[NSIZE];    /* Input sequence filename */
    int iform;              /* INput sequence format code */
    struct SEQSET *seqs;    /* Structure with sequences */
    int nseq;               /* Total number of seqs */
    char outname[NSIZE];    /* Output file name */
    FILE *out;              /* Output file */
    int alg;                /* Algorithm to use */
    int num;                /* Number to pick */
    int rnum;               /* Real number to pick (fixed don't count) */
    int cyc;                /* Number of cycles (monte carlo) */
    int rep;                /* Number of replacement tries (swaps) */
    int rseed;              /* Random number seed */
    int sirf;               /* Save intermediate result frequency (cycles) */
    int siru;               /* Save intermediate results with unique names */
    struct PPARS *pp;       /* Pair-wise comparision structure */
    REAL smat,cmat;         /* Score coefficients for Sim/Comp matches */
    REAL scon,ccon;         /* Score coefficients for Sim/Comp cont matches */
    REAL scb,ccb;           /* Score coefficients for Sim/Comp block match */
    int do_mswm;            /* Score mat via weighted matching */
    int do_cswm;            /* Score con via weighted matching */
    int do_ham;             /* Score via Hamming distance */
    char biasname[NSIZE];   /* Input bias value filename */
    REAL *bias;             /* Array of bias values to skew picking */
    char fixname[NSIZE];    /* Fix subset file name */
    char *fixmap;           /* Mask to lable some seqs as fixed */
    int nfix;               /* Number of seqs fixed */
    char mwfname[NSIZE];    /* Weighted matching file name */
    struct SCOREC *recs;    /* Structure for scoring / sorting */
    char *tmask;            /* Mask to track swaps already tried */
    REAL *tscores;          /* Array to hold scores for trial swap */
    REAL worst,best;        /* Current best, worst scores */
    REAL rworst,ave;        /* Current real-worst, average scores */
    int tie,btie;           /* Current worst / best number of ties */
    int mtry;               /* Max replacements to try */
    int verbose;            /* Flag to report what's going on */
    int do_bwn;             /* Bail (break) if number of 'worst' is this or more */
    REAL do_bwf;            /* Bail (break) if fraction of 'worst' is this or more */
}PICKSEQ;

#define CHECK_PICKSEQ(ps) if(ps){DestroyPickseqI(ps); ps=NULL;}

#define PS_ALG_SWAP     33

#define DEF_PS_SMAT     0.5     /* Default Match similarity cost */
#define DEF_PS_CMAT     1.0     /* Default Match complement cost */
#define DEF_PS_SCON     1.5     /* Default Contig similarity cost */
#define DEF_PS_CCON     2.0     /* Default Contig complement cost */
#define DEF_PS_SCB      0.0     /* Default Block-match similarity cost */
#define DEF_PS_CCB      0.0     /* Default Block-match complement cost */

#define DEF_PS_NUM      10      /* Default number of seqs to pick */
#define DEF_PS_CYC      50      /* Default number of cycles */
#define DEF_PS_REP      100
#define DEF_PS_ALG      PS_ALG_SWAP

#define UPDATE_NUM      10000   /* Feedback updating frequency */


/*********************** ppp ********************
* C function listing generated by gen_prot
* Sun Apr 11 10:09:58 2004
*/
/****************************************************************
* pick_seq.c
*/
int main(int argc, char **argv);
void PickSeqUse(void);
int PickSeqI(int argc, char **argv);
int RealizePickseqI(PICKSEQ *psPO);
int SetFixedSubsetI(PICKSEQ *psPO);
int CheckPsGenericOptionsI(PICKSEQ *psPO);
int CheckPsSeqOptionsI(PICKSEQ *psPO);
int SetPickseqOutputI(PICKSEQ *psPO);
int MonteCarloSwapPickI(PICKSEQ *psPO);
int SwapThisGuyOutI(PICKSEQ *psPO, int rep);
int FindChosenBestWorstStatsI(PICKSEQ *psPO, int cyc);
int SetStartingSetI(PICKSEQ *psPO, char *fixmapPC, char *pickmapPC);
int SetInitialInternalScoresI(PICKSEQ *psPO);
int RandFixedSwapI(char *fixmapPC, char *pickmapPC, int n,int f,int dir);
REAL PickSeqScoreR(PICKSEQ *psPO,int fid,int sid);
int HandleTempResultsI(PICKSEQ *psPO,int n);
PICKSEQ *CreatePickseqPO(void);
int DestroyPickseqI(PICKSEQ *psPO);
int InitPickseqI(PICKSEQ *psPO);
void WritePickSeqHeader(PICKSEQ *psPO,FILE *outPF);
int FillPsAlgoStringI(int alg,char *bufS);

